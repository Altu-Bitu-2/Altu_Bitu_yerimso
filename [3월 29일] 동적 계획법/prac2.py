# 선택과제 2: 9084 동전

import sys                    # 파이썬 인터프리트가 제공하는 변수와 함수를 직접 제어할 수 있게 해주는 모듈
input = sys.stdin.readline    # input 함수에 문자열 입력받기

"""
 dp[i] = 주어진 동전 종류를 사용해서 i원을 만드는 경우의 수
 dp[0] = 1 을 넣고 시작 (0원을 만드는 경우의 수 1로 생각)
 각 동전마다 해당 동전부터 만들어야 하는 금액(m)까지 돌리면서 해당 동전을 사용하기 전 금액의 경우의 수와 현재 경우의 수를 더함
 !주의! 이때, 해당 동전 사용하기 전 금액의 경우의 수가 0이면 금액을 만들 수 없는 경우이므로 더하면 안됨
"""

MAX = 10**4                                  # M의 MAX 10000

def count(n, m, coin):                       # N가지 동전으로 금액 M을 만드는 모든 방법의 수를 세는 함수
    dp = [0] * (m+1)                         # m까지 경우의 수 배열 만들기
    dp[0] = 1                                # 0원을 만드는 경우의 수 1

    for c in coin:                           # 동전의 종류만큼 반복
        for idx in range(c, m+1):            # c원부터 m까지 반복
            dp[idx] += dp[idx - c]           # 해당 동전을 사용하기 전 금액의 경우의 수 + 현재 경우의 수

    return dp[m]                             # M원을 만들 수 있는 경우의 수 리턴하기

# 입력
t = int(input())                             # 테스트케이스 입력받기

for _ in range(t):                           # 테스트케이스 만큼 반복
    # 입력
    n = int(input())                         # 동전의 가지 수 N 입력받기
    coin = list(map(int, input().split()))   # 동전의 각 금액 입력받기
    m = int(input())                         # 주어진 N가지 동전으로 만들어야 할 금액 M 입력받기
    # 연산 + 출력
    print(count(n, m, coin))                 # 연산 + 출력