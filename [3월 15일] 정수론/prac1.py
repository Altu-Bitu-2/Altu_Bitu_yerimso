#선택과제 1: 10610 30
import sys   #파이썬 인터프리트가 제공하는 변수와 함수를 직접 제어할 수 있게 해주는 모듈

input = sys.stdin.readline    #input 함수에 문자열 입력받기

"""
[30]
30의 배수 = 10의 배수 && 3의 배수
1. 10의 배수 -> 입력된 수에 0이 포함되어 있는지 확인
2. 3의 배수 -> 모든 자리수의 합이 3의 배수인지 확인
30의 배수임이 확인 되었으면,
가장 큰 수를 만들기 위해 9부터 0까지 역순으로 나열한다.
"""


def find_number(n):     #재배열해서 30의 배수로 만들 수 있는지 확인하는 함수
    digits = list(n)    #입력받은 정수의 모든 자리 수를 list에 저장
    digits.sort(reverse=True)  # 가장 큰 수를 만들기 위해 역순으로 정렬

    # 0이 존재하지 않으면, return -1
    if digits[-1] != '0':    #가장 마지막 수(가장 작은 수)가 0이 아니라면
        return -1            #-1을 리턴한다

    total = 0  # 3의 배수인지 확인하기 위해 모든 자리수를 더함

    for i in digits:       #모든 자리수를 반복
        total += int(i)    #각 자리수를 정수형으로 형변환해서 전부 더함

    # 3의 배수임을 확인
    if total % 3 == 0:            #합을 3으로 나눈 나머지가 0이면
        return ''.join(digits)    #'구분자'.join(리스트), 공백이 구분자인 digits 리스트를 문자열로 합쳐서 반환함
    else:                         #합을 3으로 나눈 나머지가 0이 아니면
        return -1                 #-1을 반환함


# 입력
n = input().rstrip()              #정수를 입력받고 오른쪽 공백 제거
# 연산 + 출력
print(find_number(n))             #find_number()함수의 결과값을 출력